name: Macros
description: Create a new snippet from a blank template.
host: EXCEL
api_set: {}
script:
  content: |
    $("#run").click(() => tryCatch(run));
    function Sort_Invoices(context) {
      var sheet = context.workbook.worksheets.getItem("Invoices");

      var rang1 = sheet.getRange("A5:K50");
      //sorting
      rang1.sort.apply([
        {
          key: 0,
          ascending: true
        }
      ]);

      var rang2 = sheet.getRange("A53:K63");
      rang2.sort.apply([
        {
          key: 0,
          ascending: true
        }
      ]);
    }
    async function run() {
      await Excel.run(async (context) => {
        Sort_Invoices(context);

        return context.sync().then(function() {
          console.log("The rangs has been sorted");
        });

        await context.sync();
      });
    }

    /** Default helper for invoking an action and handling errors. */
    async function tryCatch(callback) {
      try {
        await callback();
      } catch (error) {
        // Note: In a production add-in, you'd want to notify the user through your add-in's UI.
        console.error(error);
      }
    }
  language: typescript
template:
  content: |-
    <button id="run" class="ms-Button">
        <span class="ms-Button-label">Sort Invoices</span>
    </button>
  language: html
style:
  content: |-
    section.samples {
        margin-top: 20px;
    }

    section.samples .ms-Button, section.setup .ms-Button {
        display: block;
        margin-bottom: 5px;
        margin-left: 20px;
        min-width: 80px;
        background: blue;
        color: white;
    }
  language: css
libraries: |
  https://appsforoffice.microsoft.com/lib/1/hosted/office.js
  @types/office-js

  office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
  office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

  core-js@2.4.1/client/core.min.js
  @types/core-js

  jquery@3.1.1
  @types/jquery@3.3.1
