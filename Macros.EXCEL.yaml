name: Macros
description: Macros into Javascript
host: EXCEL
api_set: {}
script:
  content: |
    $("#sort_invoice").click(() => tryCatch(run_sort_invoice));

    $("#schedule_rollover").click(() => tryCatch(run_schedule_rollover));

    $("#new_Period").click(() => tryCatch(run_new_Period));

    $("#new_Week").click(() => tryCatch(run_new_Week));

    function Sort_Invoices(context) {
      var sheet = context.workbook.worksheets.getItem("Invoices");

      var rang1 = sheet.getRange("A5:K50");
      //sorting
      rang1.sort.apply([
        {
          key: 0,
          ascending: true
        }
      ]);

      var rang2 = sheet.getRange("A53:K63");
      rang2.sort.apply([
        {
          key: 0,
          ascending: true
        }
      ]);
    }

    function Schedule_Rollover(context) {
      var next_weeks_schedule = context.workbook.worksheets.getItem("Next Weeks Schedule");

      var current_sechdule = context.workbook.worksheets.getItem("Current Schedule");

      var next_week = next_weeks_schedule.getRange("A8:V65");
      var Current_se = current_sechdule.getRange("A8");
      Current_se.copyFrom(next_week, Excel.RangeCopyType.values, false, false);

      next_week = next_weeks_schedule.getRange("C70:V70");
      Current_se = current_sechdule.getRange("C70:D70");
      Current_se.copyFrom(next_week, "All", false, false);

      next_week = next_weeks_schedule.getRange("C74:D74");
      Current_se = current_sechdule.getRange("C74:D74");
      Current_se.copyFrom(next_week, Excel.RangeCopyType.values, false, false);

      next_week = next_weeks_schedule.getRange("I74:J74");
      Current_se = current_sechdule.getRange("I74:J74");
      Current_se.copyFrom(next_week, Excel.RangeCopyType.values, false, false);
    }
    function New_Week(context) {
      var operating_report_sheet = context.workbook.worksheets.getItem("Operating Report");

      operating_report_sheet.getRange("I7").copyFrom("L7:M16", Excel.RangeCopyType.values, false, false);

      operating_report_sheet.getRange("I20").copyFrom("L20", Excel.RangeCopyType.values, false, false);

      operating_report_sheet.getRange("J22").copyFrom("M22:M25", Excel.RangeCopyType.values, false, false);

      operating_report_sheet.getRange("B33:C33").copyFrom("B34:E34", Excel.RangeCopyType.values, false, false);

      var Inventory_sheet = context.workbook.worksheets.getItem("Inventory");

      Inventory_sheet.getRange("D4").copyFrom("O4:O26", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O4:O26").clear(Excel.ClearApplyTo.contents);

      Inventory_sheet.getRange("D31").copyFrom("O31:O53", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O31:O53").clear(Excel.ClearApplyTo.contents);

      Inventory_sheet.getRange("D58").copyFrom("O58:O92", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O58:O92").clear(Excel.ClearApplyTo.contents);

      Inventory_sheet.getRange("D97").copyFrom("O97:O133", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O97:O133").clear(Excel.ClearApplyTo.contents);

      Inventory_sheet.getRange("D138").copyFrom("O138:O176", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O138:O176").clear(Excel.ClearApplyTo.contents);

      Inventory_sheet.getRange("D181").copyFrom("O181:O201", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O181:O201").clear(Excel.ClearApplyTo.contents);

      Inventory_sheet.getRange("D206").copyFrom("O206:O214", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O206:O214").clear(Excel.ClearApplyTo.contents);

      Inventory_sheet.getRange("D219").copyFrom("O219:O227", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O219:O227").clear(Excel.ClearApplyTo.contents);

      Inventory_sheet.getRange("D219").copyFrom("O219:O227", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O219:O227").clear(Excel.ClearApplyTo.contents);

      var Invoices_sheet = context.workbook.worksheets.getItem("Invoices");
      Invoices_sheet.getRange("B5:K50").clear(Excel.ClearApplyTo.contents);

      Invoices_sheet.getRange("B53:K63").clear(Excel.ClearApplyTo.contents);

      var Sales_sheet = context.workbook.worksheets.getItem("Sales");
      Sales_sheet.getRange("B5:G17").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("I5:I17").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("B19:G20").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("I19:I20").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("B21:G21").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("I21").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("B23:G23").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("I23").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("B25:G31").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("I25:I31").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("B33:G36").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("I33:I36").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("B38:G41").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("I38:I41").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("B43:G43").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("I43").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("B45:G45").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("I45").clear(Excel.ClearApplyTo.contents);

      Sales_sheet.getRange("B4").clear(Excel.ClearApplyTo.contents);

    }
    function New_Period(context) {
      //New_Period Macro
      //Starts new period by erasing Previous Week Sales and Cost Data
      var Sales_sheet = context.workbook.worksheets.getItem("Sales");

      Sales_sheet.getRange("I7:J16").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("I20").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("J22:J25").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("B33:E33").clear(Excel.ClearApplyTo.contents);

      var Inventory_sheet = context.workbook.worksheets.getItem("Inventory");
      Inventory_sheet.getRange("D4").copyFrom("O4:O26", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O4:O26").clear(Excel.ClearApplyTo.contents);

      Inventory_sheet.getRange("D31").copyFrom("O31:O53", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O31:O53").clear(Excel.ClearApplyTo.contents);

      Inventory_sheet.getRange("D58").copyFrom("O58:O92", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O58:O92").clear(Excel.ClearApplyTo.contents);

      Inventory_sheet.getRange("D97").copyFrom("O97:O133", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O97:O133").clear(Excel.ClearApplyTo.contents);

      Inventory_sheet.getRange("D138").copyFrom("O138:O176", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O138:O176").clear(Excel.ClearApplyTo.contents);

      Inventory_sheet.getRange("D181").copyFrom("O181:O201", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O181:O201").clear(Excel.ClearApplyTo.contents);

      Inventory_sheet.getRange("D206").copyFrom("O206:O214", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O206:O214").clear(Excel.ClearApplyTo.contents);

      Inventory_sheet.getRange("D219").copyFrom("O219:O227", Excel.RangeCopyType.values, false, false);
      Inventory_sheet.getRange("O219:O227").clear(Excel.ClearApplyTo.contents);

      var Invoices_sheet = context.workbook.worksheets.getItem("Invoices");
      Invoices_sheet.getRange("B5:K50").clear(Excel.ClearApplyTo.contents);
      Invoices_sheet.getRange("B53:K63").clear(Excel.ClearApplyTo.contents);

      var Sales_sheet = context.workbook.worksheets.getItem("Sales");
      Sales_sheet.getRange("B5:G17").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("I5:I17").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("B19:G21").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("I19:I21").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("B23:G23").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("I23").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("B25:G31").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("I25:I31").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("B33:G36").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("I33:I36").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("B38:G41").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("I38:I41").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("B43:G43").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("I43").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("B45:G45").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("I45").clear(Excel.ClearApplyTo.contents);
      Sales_sheet.getRange("B4").clear(Excel.ClearApplyTo.contents);

      Invoices_sheet.getRange("B5").select;
      Inventory_sheet.getRange("O4").select;
    }

    async function run_sort_invoice() {
      await Excel.run(async (context) => {
        //function call
        Sort_Invoices(context);

        return context.sync().then(function() {
          console.log("Rangs have been sorted successfully");
        });

        await context.sync();
      });
    }

    async function run_schedule_rollover() {
      await Excel.run(async (context) => {
        //function call
        Schedule_Rollover(context);

        return context.sync().then(function() {
          console.log("Next weeks schedule has been moved to current schedule successfully");
        });

        await context.sync();
      });
    }

    async function run_new_Period() {
      await Excel.run(async (context) => {
        //function call
        New_Period(context);

        return context.sync().then(function() {
          console.log("New period has started by erasing Previous Week Sales and Cost Data successfully");
        });

        await context.sync();
      });
    }

    async function run_new_Week() {
      await Excel.run(async (context) => {
        //function call
        New_Week(context);

        return context.sync().then(function () {
          console.log("Numbers have been rolled over to a new Week successfully");
        });

        await context.sync();
      });
    }

    async function tryCatch(callback) {
      try {
        await callback();
      } catch (error) {
        console.error(error);
      }
    }
  language: typescript
template:
  content: |
    <button id="new_Week" class="ms-Button">
        <span class="ms-Button-label">New Week</span>
    </button>
    </br>
    <button id="new_Period" class="ms-Button">
        <span class="ms-Button-label">New Period</span>
    </button>
    </br>
    <button id="sort_invoice" class="ms-Button">
        <span class="ms-Button-label">Sort Invoices</span>
    </button>
    </br>
    <button id="schedule_rollover" class="ms-Button">
        <span class="ms-Button-label">Schedule Rollover</span>
    </button>
  language: html
style:
  content: |-
    section.samples {
        margin-top: 20px;
    }

    .ms-Button{
      margin-top: 10px;
    }

    section.samples .ms-Button, section.setup .ms-Button {
        display: block;
        margin-bottom: 5px;
        margin-left: 20px;
        min-width: 80px;
        background: blue;
        color: white;
    }
  language: css
libraries: |
  https://appsforoffice.microsoft.com/lib/1/hosted/office.js
  @types/office-js

  office-ui-fabric-js@1.4.0/dist/css/fabric.min.css
  office-ui-fabric-js@1.4.0/dist/css/fabric.components.min.css

  core-js@2.4.1/client/core.min.js
  @types/core-js

  jquery@3.1.1
  @types/jquery@3.3.1
